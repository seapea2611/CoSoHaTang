{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i4 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i5 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nconst _c0 = [\"container\"];\nconst _c1 = [\"in\"];\nconst _c2 = [\"multiIn\"];\nconst _c3 = [\"multiContainer\"];\nconst _c4 = [\"ddBtn\"];\n\nconst _c5 = function (a0, a1) {\n  return {\n    \"p-autocomplete-dd-input\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nfunction AutoComplete_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 7, 8);\n    i0.ɵɵlistener(\"click\", function AutoComplete_input_2_Template_input_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onInputClick($event);\n    })(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onInput($event);\n    })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onKeydown($event);\n    })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onKeyup($event);\n    })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onInputFocus($event);\n    })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onInputBlur($event);\n    })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onInputChange($event);\n    })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onInputPaste($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.inputStyle)(\"autocomplete\", ctx_r1.autocomplete)(\"ngClass\", i0.ɵɵpureFunction2(23, _c5, ctx_r1.dropdown, ctx_r1.disabled))(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonly)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵattribute(\"type\", ctx_r1.type)(\"id\", ctx_r1.inputId)(\"required\", ctx_r1.required)(\"name\", ctx_r1.name)(\"aria-controls\", ctx_r1.listId)(\"aria-expanded\", ctx_r1.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\")(\"autofocus\", ctx_r1.autofocus)(\"placeholder\", ctx_r1.placeholder)(\"size\", ctx_r1.size)(\"maxlength\", ctx_r1.maxlength)(\"tabindex\", ctx_r1.tabindex)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-required\", ctx_r1.required);\n  }\n}\n\nfunction AutoComplete_ul_3_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_ul_3_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r19 = i0.ɵɵnextContext().$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r22.resolveFieldData(val_r19));\n  }\n}\n\nfunction AutoComplete_ul_3_li_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_3_li_2_span_4_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      i0.ɵɵnextContext();\n\n      const _r20 = i0.ɵɵreference(1);\n\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.removeItem(_r20);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c6 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction AutoComplete_ul_3_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15, 16);\n    i0.ɵɵtemplate(2, AutoComplete_ul_3_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    i0.ɵɵtemplate(3, AutoComplete_ul_3_li_2_span_3_Template, 2, 1, \"span\", 18);\n    i0.ɵɵtemplate(4, AutoComplete_ul_3_li_2_span_4_Template, 1, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r19 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c6, val_r19));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r17.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r17.disabled && !ctx_r17.readonly);\n  }\n}\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"p-disabled\": a0,\n    \"p-focus\": a1\n  };\n};\n\nfunction AutoComplete_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 9, 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_3_Template_ul_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n\n      const _r18 = i0.ɵɵreference(5);\n\n      return _r18.focus();\n    });\n    i0.ɵɵtemplate(2, AutoComplete_ul_3_li_2_Template, 5, 6, \"li\", 11);\n    i0.ɵɵelementStart(3, \"li\", 12);\n    i0.ɵɵelementStart(4, \"input\", 13, 14);\n    i0.ɵɵlistener(\"input\", function AutoComplete_ul_3_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.onInput($event);\n    })(\"click\", function AutoComplete_ul_3_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.onInputClick($event);\n    })(\"keydown\", function AutoComplete_ul_3_Template_input_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.onKeydown($event);\n    })(\"keyup\", function AutoComplete_ul_3_Template_input_keyup_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.onKeyup($event);\n    })(\"focus\", function AutoComplete_ul_3_Template_input_focus_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.onInputFocus($event);\n    })(\"blur\", function AutoComplete_ul_3_Template_input_blur_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.onInputBlur($event);\n    })(\"change\", function AutoComplete_ul_3_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return ctx_r35.onInputChange($event);\n    })(\"paste\", function AutoComplete_ul_3_Template_input_paste_4_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.onInputPaste($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(20, _c7, ctx_r2.disabled, ctx_r2.focus));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r2.inputStyleClass);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled)(\"readonly\", ctx_r2.readonly)(\"autocomplete\", ctx_r2.autocomplete)(\"ngStyle\", ctx_r2.inputStyle);\n    i0.ɵɵattribute(\"type\", ctx_r2.type)(\"id\", ctx_r2.inputId)(\"placeholder\", ctx_r2.value && ctx_r2.value.length ? null : ctx_r2.placeholder)(\"tabindex\", ctx_r2.tabindex)(\"maxlength\", ctx_r2.maxlength)(\"autofocus\", ctx_r2.autofocus)(\"aria-label\", ctx_r2.ariaLabel)(\"aria-labelledby\", ctx_r2.ariaLabelledBy)(\"aria-required\", ctx_r2.required)(\"aria-controls\", ctx_r2.listId)(\"aria-expanded\", ctx_r2.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\");\n  }\n}\n\nfunction AutoComplete_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 22);\n  }\n}\n\nfunction AutoComplete_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 23, 24);\n    i0.ɵɵlistener(\"click\", function AutoComplete_button_5_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.handleDropdownClick($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r4.dropdownIcon)(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵattribute(\"tabindex\", ctx_r4.tabindex);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_4_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const optgroup_r48 = i0.ɵɵnextContext().$implicit;\n    const ctx_r49 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r49.getOptionGroupLabel(optgroup_r48) || \"empty\");\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_4_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_4_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 31);\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_4_ng_template_1_span_1_Template, 2, 1, \"span\", 28);\n    i0.ɵɵtemplate(2, AutoComplete_div_6_ng_container_4_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AutoComplete_div_6_ng_container_4_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 17);\n  }\n\n  if (rf & 2) {\n    const optgroup_r48 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r44 = i0.ɵɵreference(7);\n\n    const ctx_r47 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r47.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r47.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c6, optgroup_r48));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r44)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c6, ctx_r47.getOptionGroupChildren(optgroup_r48)));\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_4_ng_template_1_Template, 4, 9, \"ng-template\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r42.suggestions);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r44 = i0.ɵɵreference(7);\n\n    const ctx_r43 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r44)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c6, ctx_r43.suggestions));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_ng_container_0_li_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r60 = i0.ɵɵnextContext().$implicit;\n    const ctx_r62 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r62.resolveFieldData(option_r60));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_ng_container_0_li_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c8 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nconst _c9 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction AutoComplete_div_6_ng_template_6_ng_container_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r66 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 36);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_6_ng_template_6_ng_container_0_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r66);\n      const option_r60 = restoredCtx.$implicit;\n      const ctx_r65 = i0.ɵɵnextContext(4);\n      return ctx_r65.selectItem(option_r60);\n    });\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_6_ng_container_0_li_1_span_1_Template, 2, 1, \"span\", 28);\n    i0.ɵɵtemplate(2, AutoComplete_div_6_ng_template_6_ng_container_0_li_1_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r60 = ctx.$implicit;\n    const idx_r61 = ctx.index;\n    const ctx_r59 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c8, option_r60 === ctx_r59.highlightOption))(\"id\", ctx_r59.highlightOption == option_r60 ? \"p-highlighted-option\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r59.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r59.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(7, _c9, option_r60, idx_r61));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_6_ng_container_0_li_1_Template, 3, 10, \"li\", 35);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const suggestionsToDisplay_r54 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", suggestionsToDisplay_r54);\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r70 = i0.ɵɵnextContext().$implicit;\n    const ctx_r77 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r77.resolveFieldData(option_r70));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c10 = function (a0) {\n  return {\n    \"height\": a0\n  };\n};\n\nfunction AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r81 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 40);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_Template_li_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r81);\n      const option_r70 = restoredCtx.$implicit;\n      const ctx_r80 = i0.ɵɵnextContext(5);\n      return ctx_r80.selectItem(option_r70);\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_span_2_Template, 2, 1, \"span\", 28);\n    i0.ɵɵtemplate(3, AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_ng_container_3_Template, 1, 0, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const option_r70 = ctx.$implicit;\n    const i_r71 = ctx.index;\n    const ctx_r69 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c8, option_r70 === ctx_r69.highlightOption))(\"ngStyle\", i0.ɵɵpureFunction1(8, _c10, ctx_r69.itemSize + \"px\"))(\"id\", ctx_r69.highlightOption == option_r70 ? \"p-highlighted-option\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r69.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r69.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c9, option_r70, i_r71));\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 38);\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_Template, 4, 13, \"ng-container\", 39);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const suggestionsToDisplay_r54 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r68 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c10, ctx_r68.scrollHeight))(\"itemSize\", ctx_r68.itemSize);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", suggestionsToDisplay_r54);\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_6_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template, 2, 5, \"cdk-virtual-scroll-viewport\", 37);\n  }\n\n  if (rf & 2) {\n    const ctx_r57 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r57.virtualScroll && !ctx_r57.noResults);\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_li_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r83 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r83.emptyMessageLabel, \" \");\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_li_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 42);\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 41);\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_6_li_3_ng_container_1_Template, 2, 1, \"ng-container\", 32);\n    i0.ɵɵtemplate(2, AutoComplete_div_6_ng_template_6_li_3_ng_container_2_Template, 2, 0, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r58 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r58.emptyTemplate)(\"ngIfElse\", ctx_r58.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r58.emptyTemplate);\n  }\n}\n\nfunction AutoComplete_div_6_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_6_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 32);\n    i0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_6_ng_template_1_Template, 1, 1, \"ng-template\", null, 33, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, AutoComplete_div_6_ng_template_6_li_3_Template, 3, 3, \"li\", 34);\n  }\n\n  if (rf & 2) {\n    const _r56 = i0.ɵɵreference(2);\n\n    const ctx_r45 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r45.virtualScroll)(\"ngIfElse\", _r56);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.noResults && ctx_r45.showEmptyMessage);\n  }\n}\n\nfunction AutoComplete_div_6_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c11 = function () {\n  return [\"p-autocomplete-panel p-component\"];\n};\n\nconst _c12 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c13 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nconst _c14 = function (a0) {\n  return {\n    \"p-autocomplete-virtualscroll\": a0\n  };\n};\n\nfunction AutoComplete_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 0, 25);\n    i0.ɵɵlistener(\"@overlayAnimation.start\", function AutoComplete_div_6_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r86 = i0.ɵɵnextContext();\n      return ctx_r86.onOverlayAnimationStart($event);\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_6_ng_container_2_Template, 1, 0, \"ng-container\", 26);\n    i0.ɵɵelementStart(3, \"ul\", 27);\n    i0.ɵɵtemplate(4, AutoComplete_div_6_ng_container_4_Template, 2, 1, \"ng-container\", 28);\n    i0.ɵɵtemplate(5, AutoComplete_div_6_ng_container_5_Template, 2, 4, \"ng-container\", 28);\n    i0.ɵɵtemplate(6, AutoComplete_div_6_ng_template_6_Template, 4, 3, \"ng-template\", null, 29, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, AutoComplete_div_6_ng_container_8_Template, 1, 0, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r5.panelStyleClass);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r5.virtualScroll ? \"auto\" : ctx_r5.scrollHeight);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(13, _c11))(\"ngStyle\", ctx_r5.panelStyle)(\"@overlayAnimation\", i0.ɵɵpureFunction1(17, _c13, i0.ɵɵpureFunction2(14, _c12, ctx_r5.showTransitionOptions, ctx_r5.hideTransitionOptions)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c14, ctx_r5.virtualScroll));\n    i0.ɵɵattribute(\"id\", ctx_r5.listId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.footerTemplate);\n  }\n}\n\nconst _c15 = function (a1, a2) {\n  return {\n    \"p-autocomplete p-component\": true,\n    \"p-autocomplete-dd\": a1,\n    \"p-autocomplete-multiple\": a2\n  };\n};\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AutoComplete),\n  multi: true\n};\n\nclass AutoComplete {\n  constructor(el, renderer, cd, differs, config) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.differs = differs;\n    this.config = config;\n    this.minLength = 1;\n    this.delay = 300;\n    this.type = 'text';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.dropdownIcon = \"pi pi-chevron-down\";\n    this.unique = true;\n    this.completeOnFocus = false;\n    this.completeMethod = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onUnselect = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onKeyUp = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.scrollHeight = '200px';\n    this.dropdownMode = 'blank';\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autocomplete = 'off';\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n\n    this.overlayVisible = false;\n    this.focus = false;\n    this.inputFieldValue = null;\n    this.differ = differs.find([]).create(null);\n    this.listId = UniqueComponentId() + '_list';\n  }\n\n  get suggestions() {\n    return this._suggestions;\n  }\n\n  set suggestions(val) {\n    this._suggestions = val;\n    this.handleSuggestionsChange();\n  }\n\n  ngAfterViewChecked() {\n    //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n    if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n      setTimeout(() => {\n        if (this.overlay) {\n          this.alignOverlay();\n        }\n      }, 1);\n      this.suggestionsUpdated = false;\n    }\n\n    if (this.highlightOptionChanged) {\n      setTimeout(() => {\n        if (this.overlay && this.itemsWrapper) {\n          let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n\n          if (listItem) {\n            DomHandler.scrollInView(this.itemsWrapper, listItem);\n          }\n\n          if (this.virtualScroll && this.viewPort) {\n            let range = this.viewPort.getRenderedRange();\n            this.updateVirtualScrollSelectedIndex();\n\n            if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n              this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n            }\n          }\n        }\n      }, 1);\n      this.highlightOptionChanged = false;\n    }\n  }\n\n  handleSuggestionsChange() {\n    if (this._suggestions != null && this.loading) {\n      this.highlightOption = null;\n\n      if (this._suggestions.length) {\n        this.noResults = false;\n        this.show();\n        this.suggestionsUpdated = true;\n\n        if (this.autoHighlight) {\n          this.highlightOption = this._suggestions[0];\n        }\n      } else {\n        this.noResults = true;\n\n        if (this.showEmptyMessage) {\n          this.show();\n          this.suggestionsUpdated = true;\n        } else {\n          this.hide();\n        }\n      }\n\n      this.loading = false;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  updateVirtualScrollSelectedIndex() {\n    if (this.highlightOption && this.suggestions && this.suggestions.length) {\n      this.virtualScrollSelectedIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n    }\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.filled = this.value && this.value != '';\n    this.updateInputField();\n    this.cd.markForCheck();\n  }\n\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  onInput(event) {\n    // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n    if (!this.inputKeyDown && DomHandler.isIE()) {\n      return;\n    }\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    let value = event.target.value;\n\n    if (!this.multiple && !this.forceSelection) {\n      this.onModelChange(value);\n    }\n\n    if (value.length === 0 && !this.multiple) {\n      this.hide();\n      this.onClear.emit(event);\n      this.onModelChange(value);\n    }\n\n    if (value.length >= this.minLength) {\n      this.timeout = setTimeout(() => {\n        this.search(event, value);\n      }, this.delay);\n    } else {\n      this.hide();\n    }\n\n    this.updateFilledState();\n    this.inputKeyDown = false;\n  }\n\n  onInputClick(event) {\n    if (this.documentClickListener) {\n      this.inputClick = true;\n    }\n  }\n\n  search(event, query) {\n    //allow empty string but not undefined or null\n    if (query === undefined || query === null) {\n      return;\n    }\n\n    this.loading = true;\n    this.completeMethod.emit({\n      originalEvent: event,\n      query: query\n    });\n  }\n\n  selectItem(option, focus = true) {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n\n    if (this.multiple) {\n      this.multiInputEL.nativeElement.value = '';\n      this.value = this.value || [];\n\n      if (!this.isSelected(option) || !this.unique) {\n        this.value = [...this.value, option];\n        this.onModelChange(this.value);\n      }\n    } else {\n      this.inputEL.nativeElement.value = this.resolveFieldData(option);\n      this.value = option;\n      this.onModelChange(this.value);\n    }\n\n    this.onSelect.emit(option);\n    this.updateFilledState();\n\n    if (focus) {\n      this.itemClicked = true;\n      this.focusInput();\n    }\n  }\n\n  show() {\n    if (this.multiInputEL || this.inputEL) {\n      let hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n\n      if (!this.overlayVisible && hasFocus) {\n        this.overlayVisible = true;\n      }\n    }\n  }\n\n  onOverlayAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.cdk-virtual-scroll-viewport') : this.overlay;\n        this.appendOverlay();\n\n        if (this.autoZIndex) {\n          this.overlay.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n        }\n\n        this.alignOverlay();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n        this.onShow.emit(event);\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n        break;\n    }\n  }\n\n  appendOverlay() {\n    if (this.appendTo) {\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n      if (!this.overlay.style.minWidth) {\n        this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n      }\n    }\n  }\n\n  resolveFieldData(value) {\n    let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n    return data !== (null || undefined) ? data : '';\n  }\n\n  restoreOverlayAppend() {\n    if (this.overlay && this.appendTo) {\n      this.el.nativeElement.appendChild(this.overlay);\n    }\n  }\n\n  alignOverlay() {\n    if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);else DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n  }\n\n  hide() {\n    this.overlayVisible = false;\n    this.cd.markForCheck();\n  }\n\n  handleDropdownClick(event) {\n    if (!this.overlayVisible) {\n      this.focusInput();\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      if (this.dropdownMode === 'blank') this.search(event, '');else if (this.dropdownMode === 'current') this.search(event, queryValue);\n      this.onDropdownClick.emit({\n        originalEvent: event,\n        query: queryValue\n      });\n    } else {\n      this.hide();\n    }\n  }\n\n  focusInput() {\n    if (this.multiple) this.multiInputEL.nativeElement.focus();else this.inputEL.nativeElement.focus();\n  }\n\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n\n  removeItem(item) {\n    let itemIndex = DomHandler.index(item);\n    let removedValue = this.value[itemIndex];\n    this.value = this.value.filter((val, i) => i != itemIndex);\n    this.onModelChange(this.value);\n    this.updateFilledState();\n    this.onUnselect.emit(removedValue);\n  }\n\n  onKeydown(event) {\n    if (this.overlayVisible) {\n      switch (event.which) {\n        //down\n        case 40:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex !== -1) {\n              let nextItemIndex = highlightItemIndex.itemIndex + 1;\n\n              if (nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex != -1) {\n              var nextItemIndex = highlightItemIndex + 1;\n\n              if (nextItemIndex != this.suggestions.length) {\n                this.highlightOption = this.suggestions[nextItemIndex];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.suggestions[0];\n            }\n          }\n\n          event.preventDefault();\n          break;\n        //up\n\n        case 38:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex !== -1) {\n              let prevItemIndex = highlightItemIndex.itemIndex - 1;\n\n              if (prevItemIndex >= 0) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (prevItemIndex < 0) {\n                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n\n                if (prevGroup) {\n                  this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                  this.highlightOptionChanged = true;\n                }\n              }\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex > 0) {\n              let prevItemIndex = highlightItemIndex - 1;\n              this.highlightOption = this.suggestions[prevItemIndex];\n              this.highlightOptionChanged = true;\n            }\n          }\n\n          event.preventDefault();\n          break;\n        //enter\n\n        case 13:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n            this.hide();\n          }\n\n          event.preventDefault();\n          break;\n        //escape\n\n        case 27:\n          this.hide();\n          event.preventDefault();\n          break;\n        //tab\n\n        case 9:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n          }\n\n          this.hide();\n          break;\n      }\n    } else {\n      if (event.which === 40 && this.suggestions) {\n        this.search(event, event.target.value);\n      }\n    }\n\n    if (this.multiple) {\n      switch (event.which) {\n        //backspace\n        case 8:\n          if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n            this.value = [...this.value];\n            const removedValue = this.value.pop();\n            this.onModelChange(this.value);\n            this.updateFilledState();\n            this.onUnselect.emit(removedValue);\n          }\n\n          break;\n      }\n    }\n\n    this.inputKeyDown = true;\n  }\n\n  onKeyup(event) {\n    this.onKeyUp.emit(event);\n  }\n\n  onInputFocus(event) {\n    if (!this.itemClicked && this.completeOnFocus) {\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      this.search(event, queryValue);\n    }\n\n    this.focus = true;\n    this.onFocus.emit(event);\n    this.itemClicked = false;\n  }\n\n  onInputBlur(event) {\n    this.focus = false;\n    this.onModelTouched();\n    this.onBlur.emit(event);\n  }\n\n  onInputChange(event) {\n    if (this.forceSelection) {\n      let valid = false;\n      let inputValue = event.target.value.trim();\n\n      if (this.suggestions) {\n        for (let suggestion of this.suggestions) {\n          let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n\n          if (itemValue && inputValue === itemValue.trim()) {\n            valid = true;\n            this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n              this.selectItem(suggestion, false);\n            }, 250);\n            break;\n          }\n        }\n      }\n\n      if (!valid) {\n        if (this.multiple) {\n          this.multiInputEL.nativeElement.value = '';\n        } else {\n          this.value = null;\n          this.inputEL.nativeElement.value = '';\n        }\n\n        this.onClear.emit(event);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n      }\n    }\n  }\n\n  onInputPaste(event) {\n    this.onKeydown(event);\n  }\n\n  isSelected(val) {\n    let selected = false;\n\n    if (this.value && this.value.length) {\n      for (let i = 0; i < this.value.length; i++) {\n        if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n          selected = true;\n          break;\n        }\n      }\n    }\n\n    return selected;\n  }\n\n  findOptionIndex(option, suggestions) {\n    let index = -1;\n\n    if (suggestions) {\n      for (let i = 0; i < suggestions.length; i++) {\n        if (ObjectUtils.equals(option, suggestions[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  findOptionGroupIndex(val, opts) {\n    let groupIndex, itemIndex;\n\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        groupIndex = i;\n        itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n        if (itemIndex !== -1) {\n          break;\n        }\n      }\n    }\n\n    if (itemIndex !== -1) {\n      return {\n        groupIndex: groupIndex,\n        itemIndex: itemIndex\n      };\n    } else {\n      return -1;\n    }\n  }\n\n  updateFilledState() {\n    if (this.multiple) this.filled = this.value && this.value.length || this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '';else this.filled = this.inputFieldValue && this.inputFieldValue != '' || this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '';\n    ;\n  }\n\n  updateInputField() {\n    let formattedValue = this.resolveFieldData(this.value);\n    this.inputFieldValue = formattedValue;\n\n    if (this.inputEL && this.inputEL.nativeElement) {\n      this.inputEL.nativeElement.value = formattedValue;\n    }\n\n    this.updateFilledState();\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n        if (event.which === 3) {\n          return;\n        }\n\n        if (!this.inputClick && !this.isDropdownClick(event)) {\n          this.hide();\n        }\n\n        this.inputClick = false;\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  isDropdownClick(event) {\n    if (this.dropdown) {\n      let target = event.target;\n      return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n    } else {\n      return false;\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  onWindowResize() {\n    this.hide();\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.overlay = null;\n    this.onHide.emit();\n  }\n\n  ngOnDestroy() {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n\n    this.restoreOverlayAppend();\n    this.onOverlayHide();\n  }\n\n}\n\nAutoComplete.ɵfac = function AutoComplete_Factory(t) {\n  return new (t || AutoComplete)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i1.PrimeNGConfig));\n};\n\nAutoComplete.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutoComplete,\n  selectors: [[\"p-autoComplete\"]],\n  contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function AutoComplete_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiInputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewPort = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function AutoComplete_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus && !ctx.disabled || ctx.overlayVisible);\n    }\n  },\n  inputs: {\n    minLength: \"minLength\",\n    delay: \"delay\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    inputStyle: \"inputStyle\",\n    inputId: \"inputId\",\n    inputStyleClass: \"inputStyleClass\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    virtualScroll: \"virtualScroll\",\n    itemSize: \"itemSize\",\n    maxlength: \"maxlength\",\n    name: \"name\",\n    required: \"required\",\n    size: \"size\",\n    appendTo: \"appendTo\",\n    autoHighlight: \"autoHighlight\",\n    forceSelection: \"forceSelection\",\n    type: \"type\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    ariaLabel: \"ariaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    dropdownIcon: \"dropdownIcon\",\n    unique: \"unique\",\n    group: \"group\",\n    completeOnFocus: \"completeOnFocus\",\n    field: \"field\",\n    scrollHeight: \"scrollHeight\",\n    dropdown: \"dropdown\",\n    showEmptyMessage: \"showEmptyMessage\",\n    dropdownMode: \"dropdownMode\",\n    multiple: \"multiple\",\n    tabindex: \"tabindex\",\n    dataKey: \"dataKey\",\n    emptyMessage: \"emptyMessage\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autofocus: \"autofocus\",\n    autocomplete: \"autocomplete\",\n    optionGroupChildren: \"optionGroupChildren\",\n    optionGroupLabel: \"optionGroupLabel\",\n    suggestions: \"suggestions\"\n  },\n  outputs: {\n    completeMethod: \"completeMethod\",\n    onSelect: \"onSelect\",\n    onUnselect: \"onUnselect\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onDropdownClick: \"onDropdownClick\",\n    onClear: \"onClear\",\n    onKeyUp: \"onKeyUp\",\n    onShow: \"onShow\",\n    onHide: \"onHide\"\n  },\n  features: [i0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])],\n  decls: 7,\n  vars: 12,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"class\", \"p-autocomplete-input p-inputtext p-component\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"ngStyle\", \"class\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-multiple-container p-component p-inputtext\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi pi-spinner pi-spin\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown\", \"pRipple\", \"\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"max-height\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 1, \"p-autocomplete-input\", \"p-inputtext\", \"p-component\", 3, \"ngStyle\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"in\", \"\"], [1, \"p-autocomplete-multiple-container\", \"p-component\", \"p-inputtext\", 3, \"ngClass\", \"click\"], [\"multiContainer\", \"\"], [\"class\", \"p-autocomplete-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-autocomplete-input-token\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"readonly\", \"autocomplete\", \"ngStyle\", \"input\", \"click\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"multiIn\", \"\"], [1, \"p-autocomplete-token\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [1, \"p-autocomplete-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-autocomplete-loader\", \"pi\", \"pi-spinner\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", 3, \"icon\", \"disabled\", \"click\"], [\"ddBtn\", \"\"], [\"panel\", \"\"], [4, \"ngTemplateOutlet\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\", 3, \"ngClass\"], [4, \"ngIf\"], [\"itemslist\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-autocomplete-item-group\"], [4, \"ngIf\", \"ngIfElse\"], [\"virtualScrollList\", \"\"], [\"class\", \"p-autocomplete-empty-message\", 4, \"ngIf\"], [\"role\", \"option\", \"class\", \"p-autocomplete-item\", \"pRipple\", \"\", 3, \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngClass\", \"id\", \"click\"], [3, \"ngStyle\", \"itemSize\", 4, \"ngIf\"], [3, \"ngStyle\", \"itemSize\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngClass\", \"ngStyle\", \"id\", \"click\"], [1, \"p-autocomplete-empty-message\"], [\"empty\", \"\"]],\n  template: function AutoComplete_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0, 1);\n      i0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 26, \"input\", 2);\n      i0.ɵɵtemplate(3, AutoComplete_ul_3_Template, 6, 23, \"ul\", 3);\n      i0.ɵɵtemplate(4, AutoComplete_i_4_Template, 1, 0, \"i\", 4);\n      i0.ɵɵtemplate(5, AutoComplete_button_5_Template, 2, 3, \"button\", 5);\n      i0.ɵɵtemplate(6, AutoComplete_div_6_Template, 9, 21, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c15, ctx.dropdown, ctx.multiple))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  directives: [i3.NgClass, i3.NgStyle, i3.NgIf, i3.NgForOf, i3.NgTemplateOutlet, i4.ButtonDirective, i5.Ripple, i2.CdkVirtualScrollViewport, i2.CdkFixedSizeVirtualScroll, i2.CdkVirtualForOf],\n  styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoComplete, [{\n    type: Component,\n    args: [{\n      selector: 'p-autoComplete',\n      template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n            ><ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"{'p-autocomplete-virtualscroll': virtualScroll}\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                            <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                            </li>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && !noResults\">\n                                <ng-container *cdkVirtualFor=\"let option of suggestionsToDisplay; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                    <li role=\"option\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                        <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                                    </li>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ng-template>\n                </ul>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      host: {\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': '(focus && !disabled) || overlayVisible'\n      },\n      providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./autocomplete.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i1.PrimeNGConfig\n    }];\n  }, {\n    minLength: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    autoHighlight: [{\n      type: Input\n    }],\n    forceSelection: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    unique: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    completeOnFocus: [{\n      type: Input\n    }],\n    completeMethod: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onUnselect: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    field: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    dropdown: [{\n      type: Input\n    }],\n    showEmptyMessage: [{\n      type: Input\n    }],\n    dropdownMode: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    containerEL: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    inputEL: [{\n      type: ViewChild,\n      args: ['in']\n    }],\n    multiInputEL: [{\n      type: ViewChild,\n      args: ['multiIn']\n    }],\n    multiContainerEL: [{\n      type: ViewChild,\n      args: ['multiContainer']\n    }],\n    dropdownButton: [{\n      type: ViewChild,\n      args: ['ddBtn']\n    }],\n    viewPort: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    suggestions: [{\n      type: Input\n    }]\n  });\n})();\n\nclass AutoCompleteModule {}\n\nAutoCompleteModule.ɵfac = function AutoCompleteModule_Factory(t) {\n  return new (t || AutoCompleteModule)();\n};\n\nAutoCompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AutoCompleteModule\n});\nAutoCompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule], SharedModule, ScrollingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule],\n      exports: [AutoComplete, SharedModule, ScrollingModule],\n      declarations: [AutoComplete]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule }; //# sourceMappingURL=primeng-autocomplete.js.map","map":{"version":3,"sources":["C:/Users/admin/Documents/GitHub/CoSoHaTang/Source/angular/node_modules/primeng/fesm2015/primeng-autocomplete.js"],"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChildren","NgModule","i3","CommonModule","trigger","transition","style","animate","InputTextModule","i4","ButtonModule","i5","RippleModule","i1","TranslationKeys","PrimeTemplate","SharedModule","DomHandler","ConnectedOverlayScrollHandler","UniqueComponentId","ObjectUtils","NG_VALUE_ACCESSOR","i2","CdkVirtualScrollViewport","ScrollingModule","AUTOCOMPLETE_VALUE_ACCESSOR","provide","useExisting","AutoComplete","multi","constructor","el","renderer","cd","differs","config","minLength","delay","type","autoZIndex","baseZIndex","dropdownIcon","unique","completeOnFocus","completeMethod","onSelect","onUnselect","onFocus","onBlur","onDropdownClick","onClear","onKeyUp","onShow","onHide","scrollHeight","dropdownMode","showTransitionOptions","hideTransitionOptions","autocomplete","onModelChange","onModelTouched","overlayVisible","focus","inputFieldValue","differ","find","create","listId","suggestions","_suggestions","val","handleSuggestionsChange","ngAfterViewChecked","suggestionsUpdated","overlay","offsetParent","setTimeout","alignOverlay","highlightOptionChanged","itemsWrapper","listItem","findSingle","scrollInView","virtualScroll","viewPort","range","getRenderedRange","updateVirtualScrollSelectedIndex","start","virtualScrollSelectedIndex","end","scrollToIndex","loading","highlightOption","length","noResults","show","autoHighlight","showEmptyMessage","hide","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","template","groupTemplate","selectedItemTemplate","headerTemplate","emptyTemplate","footerTemplate","findOptionIndex","writeValue","value","filled","updateInputField","markForCheck","getOptionGroupChildren","optionGroup","optionGroupChildren","resolveFieldData","items","getOptionGroupLabel","optionGroupLabel","label","undefined","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","onInput","event","inputKeyDown","isIE","timeout","clearTimeout","target","multiple","forceSelection","emit","search","updateFilledState","onInputClick","documentClickListener","inputClick","query","originalEvent","selectItem","option","forceSelectionUpdateModelTimeout","multiInputEL","nativeElement","isSelected","inputEL","itemClicked","focusInput","hasFocus","ownerDocument","activeElement","onOverlayAnimationStart","toState","element","appendOverlay","zIndex","String","zindex","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","appendTo","document","body","appendChild","minWidth","getWidth","children","data","field","restoreOverlayAppend","absolutePosition","multiContainerEL","relativePosition","handleDropdownClick","queryValue","emptyMessageLabel","emptyMessage","getTranslation","EMPTY_MESSAGE","removeItem","itemIndex","index","removedValue","filter","i","onKeydown","which","group","highlightItemIndex","findOptionGroupIndex","nextItemIndex","groupIndex","preventDefault","prevItemIndex","prevGroup","pop","onKeyup","onInputFocus","onInputBlur","onInputChange","valid","inputValue","trim","suggestion","itemValue","onInputPaste","selected","equals","dataKey","opts","formattedValue","documentTarget","listen","isDropdownClick","dropdown","dropdownButton","parentNode","unbindDocumentClickListener","documentResizeListener","onWindowResize","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","scrollHandler","containerEL","unbindScrollListener","ngOnDestroy","destroy","ɵfac","ElementRef","Renderer2","ChangeDetectorRef","IterableDiffers","PrimeNGConfig","ɵcmp","NgClass","NgStyle","NgIf","NgForOf","NgTemplateOutlet","ButtonDirective","Ripple","CdkFixedSizeVirtualScroll","CdkVirtualForOf","opacity","transform","args","selector","animations","host","providers","changeDetection","OnPush","encapsulation","None","styleUrls","panelStyle","styleClass","panelStyleClass","inputStyle","inputId","inputStyleClass","placeholder","readonly","itemSize","maxlength","name","required","size","ariaLabel","ariaLabelledBy","tabindex","autofocus","AutoCompleteModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i4 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i5 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoComplete),\n    multi: true\n};\nclass AutoComplete {\n    constructor(el, renderer, cd, differs, config) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.differs = differs;\n        this.config = config;\n        this.minLength = 1;\n        this.delay = 300;\n        this.type = 'text';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.dropdownIcon = \"pi pi-chevron-down\";\n        this.unique = true;\n        this.completeOnFocus = false;\n        this.completeMethod = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onUnselect = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onDropdownClick = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.scrollHeight = '200px';\n        this.dropdownMode = 'blank';\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.autocomplete = 'off';\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.overlayVisible = false;\n        this.focus = false;\n        this.inputFieldValue = null;\n        this.differ = differs.find([]).create(null);\n        this.listId = UniqueComponentId() + '_list';\n    }\n    get suggestions() {\n        return this._suggestions;\n    }\n    set suggestions(val) {\n        this._suggestions = val;\n        this.handleSuggestionsChange();\n    }\n    ngAfterViewChecked() {\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    this.alignOverlay();\n                }\n            }, 1);\n            this.suggestionsUpdated = false;\n        }\n        if (this.highlightOptionChanged) {\n            setTimeout(() => {\n                if (this.overlay && this.itemsWrapper) {\n                    let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n                    if (listItem) {\n                        DomHandler.scrollInView(this.itemsWrapper, listItem);\n                    }\n                    if (this.virtualScroll && this.viewPort) {\n                        let range = this.viewPort.getRenderedRange();\n                        this.updateVirtualScrollSelectedIndex();\n                        if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n                            this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n                        }\n                    }\n                }\n            }, 1);\n            this.highlightOptionChanged = false;\n        }\n    }\n    handleSuggestionsChange() {\n        if (this._suggestions != null && this.loading) {\n            this.highlightOption = null;\n            if (this._suggestions.length) {\n                this.noResults = false;\n                this.show();\n                this.suggestionsUpdated = true;\n                if (this.autoHighlight) {\n                    this.highlightOption = this._suggestions[0];\n                }\n            }\n            else {\n                this.noResults = true;\n                if (this.showEmptyMessage) {\n                    this.show();\n                    this.suggestionsUpdated = true;\n                }\n                else {\n                    this.hide();\n                }\n            }\n            this.loading = false;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    updateVirtualScrollSelectedIndex() {\n        if (this.highlightOption && this.suggestions && this.suggestions.length) {\n            this.virtualScrollSelectedIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n        }\n    }\n    writeValue(value) {\n        this.value = value;\n        this.filled = this.value && this.value != '';\n        this.updateInputField();\n        this.cd.markForCheck();\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onInput(event) {\n        // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n        if (!this.inputKeyDown && DomHandler.isIE()) {\n            return;\n        }\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        let value = event.target.value;\n        if (!this.multiple && !this.forceSelection) {\n            this.onModelChange(value);\n        }\n        if (value.length === 0 && !this.multiple) {\n            this.hide();\n            this.onClear.emit(event);\n            this.onModelChange(value);\n        }\n        if (value.length >= this.minLength) {\n            this.timeout = setTimeout(() => {\n                this.search(event, value);\n            }, this.delay);\n        }\n        else {\n            this.hide();\n        }\n        this.updateFilledState();\n        this.inputKeyDown = false;\n    }\n    onInputClick(event) {\n        if (this.documentClickListener) {\n            this.inputClick = true;\n        }\n    }\n    search(event, query) {\n        //allow empty string but not undefined or null\n        if (query === undefined || query === null) {\n            return;\n        }\n        this.loading = true;\n        this.completeMethod.emit({\n            originalEvent: event,\n            query: query\n        });\n    }\n    selectItem(option, focus = true) {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.multiple) {\n            this.multiInputEL.nativeElement.value = '';\n            this.value = this.value || [];\n            if (!this.isSelected(option) || !this.unique) {\n                this.value = [...this.value, option];\n                this.onModelChange(this.value);\n            }\n        }\n        else {\n            this.inputEL.nativeElement.value = this.resolveFieldData(option);\n            this.value = option;\n            this.onModelChange(this.value);\n        }\n        this.onSelect.emit(option);\n        this.updateFilledState();\n        if (focus) {\n            this.itemClicked = true;\n            this.focusInput();\n        }\n    }\n    show() {\n        if (this.multiInputEL || this.inputEL) {\n            let hasFocus = this.multiple ?\n                this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement :\n                this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n            if (!this.overlayVisible && hasFocus) {\n                this.overlayVisible = true;\n            }\n        }\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.cdk-virtual-scroll-viewport') : this.overlay;\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.onShow.emit(event);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    }\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n            }\n        }\n    }\n    resolveFieldData(value) {\n        let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n        return data !== (null || undefined) ? data : '';\n    }\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n        else\n            DomHandler.relativePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n    }\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n    handleDropdownClick(event) {\n        if (!this.overlayVisible) {\n            this.focusInput();\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            if (this.dropdownMode === 'blank')\n                this.search(event, '');\n            else if (this.dropdownMode === 'current')\n                this.search(event, queryValue);\n            this.onDropdownClick.emit({\n                originalEvent: event,\n                query: queryValue\n            });\n        }\n        else {\n            this.hide();\n        }\n    }\n    focusInput() {\n        if (this.multiple)\n            this.multiInputEL.nativeElement.focus();\n        else\n            this.inputEL.nativeElement.focus();\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    removeItem(item) {\n        let itemIndex = DomHandler.index(item);\n        let removedValue = this.value[itemIndex];\n        this.value = this.value.filter((val, i) => i != itemIndex);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n        this.onUnselect.emit(removedValue);\n    }\n    onKeydown(event) {\n        if (this.overlayVisible) {\n            switch (event.which) {\n                //down\n                case 40:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let nextItemIndex = highlightItemIndex.itemIndex + 1;\n                            if (nextItemIndex < (this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length)) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex != -1) {\n                            var nextItemIndex = highlightItemIndex + 1;\n                            if (nextItemIndex != (this.suggestions.length)) {\n                                this.highlightOption = this.suggestions[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.suggestions[0];\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //up\n                case 38:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let prevItemIndex = highlightItemIndex.itemIndex - 1;\n                            if (prevItemIndex >= 0) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (prevItemIndex < 0) {\n                                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n                                if (prevGroup) {\n                                    this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                                    this.highlightOptionChanged = true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex > 0) {\n                            let prevItemIndex = highlightItemIndex - 1;\n                            this.highlightOption = this.suggestions[prevItemIndex];\n                            this.highlightOptionChanged = true;\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //enter\n                case 13:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                        this.hide();\n                    }\n                    event.preventDefault();\n                    break;\n                //escape\n                case 27:\n                    this.hide();\n                    event.preventDefault();\n                    break;\n                //tab\n                case 9:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                    }\n                    this.hide();\n                    break;\n            }\n        }\n        else {\n            if (event.which === 40 && this.suggestions) {\n                this.search(event, event.target.value);\n            }\n        }\n        if (this.multiple) {\n            switch (event.which) {\n                //backspace\n                case 8:\n                    if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n                        this.value = [...this.value];\n                        const removedValue = this.value.pop();\n                        this.onModelChange(this.value);\n                        this.updateFilledState();\n                        this.onUnselect.emit(removedValue);\n                    }\n                    break;\n            }\n        }\n        this.inputKeyDown = true;\n    }\n    onKeyup(event) {\n        this.onKeyUp.emit(event);\n    }\n    onInputFocus(event) {\n        if (!this.itemClicked && this.completeOnFocus) {\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            this.search(event, queryValue);\n        }\n        this.focus = true;\n        this.onFocus.emit(event);\n        this.itemClicked = false;\n    }\n    onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    onInputChange(event) {\n        if (this.forceSelection) {\n            let valid = false;\n            let inputValue = event.target.value.trim();\n            if (this.suggestions) {\n                for (let suggestion of this.suggestions) {\n                    let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n                    if (itemValue && inputValue === itemValue.trim()) {\n                        valid = true;\n                        this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n                            this.selectItem(suggestion, false);\n                        }, 250);\n                        break;\n                    }\n                }\n            }\n            if (!valid) {\n                if (this.multiple) {\n                    this.multiInputEL.nativeElement.value = '';\n                }\n                else {\n                    this.value = null;\n                    this.inputEL.nativeElement.value = '';\n                }\n                this.onClear.emit(event);\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n    }\n    onInputPaste(event) {\n        this.onKeydown(event);\n    }\n    isSelected(val) {\n        let selected = false;\n        if (this.value && this.value.length) {\n            for (let i = 0; i < this.value.length; i++) {\n                if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n                    selected = true;\n                    break;\n                }\n            }\n        }\n        return selected;\n    }\n    findOptionIndex(option, suggestions) {\n        let index = -1;\n        if (suggestions) {\n            for (let i = 0; i < suggestions.length; i++) {\n                if (ObjectUtils.equals(option, suggestions[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    findOptionGroupIndex(val, opts) {\n        let groupIndex, itemIndex;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    }\n    updateFilledState() {\n        if (this.multiple)\n            this.filled = (this.value && this.value.length) || (this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '');\n        else\n            this.filled = (this.inputFieldValue && this.inputFieldValue != '') || (this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '');\n        ;\n    }\n    updateInputField() {\n        let formattedValue = this.resolveFieldData(this.value);\n        this.inputFieldValue = formattedValue;\n        if (this.inputEL && this.inputEL.nativeElement) {\n            this.inputEL.nativeElement.value = formattedValue;\n        }\n        this.updateFilledState();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (event.which === 3) {\n                    return;\n                }\n                if (!this.inputClick && !this.isDropdownClick(event)) {\n                    this.hide();\n                }\n                this.inputClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n    isDropdownClick(event) {\n        if (this.dropdown) {\n            let target = event.target;\n            return (target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement);\n        }\n        else {\n            return false;\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        this.hide();\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n        this.onHide.emit();\n    }\n    ngOnDestroy() {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\nAutoComplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: AutoComplete, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.IterableDiffers }, { token: i1.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\nAutoComplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.4\", type: AutoComplete, selector: \"p-autoComplete\", inputs: { minLength: \"minLength\", delay: \"delay\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", inputStyle: \"inputStyle\", inputId: \"inputId\", inputStyleClass: \"inputStyleClass\", placeholder: \"placeholder\", readonly: \"readonly\", disabled: \"disabled\", virtualScroll: \"virtualScroll\", itemSize: \"itemSize\", maxlength: \"maxlength\", name: \"name\", required: \"required\", size: \"size\", appendTo: \"appendTo\", autoHighlight: \"autoHighlight\", forceSelection: \"forceSelection\", type: \"type\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", dropdownIcon: \"dropdownIcon\", unique: \"unique\", group: \"group\", completeOnFocus: \"completeOnFocus\", field: \"field\", scrollHeight: \"scrollHeight\", dropdown: \"dropdown\", showEmptyMessage: \"showEmptyMessage\", dropdownMode: \"dropdownMode\", multiple: \"multiple\", tabindex: \"tabindex\", dataKey: \"dataKey\", emptyMessage: \"emptyMessage\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", autofocus: \"autofocus\", autocomplete: \"autocomplete\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", suggestions: \"suggestions\" }, outputs: { completeMethod: \"completeMethod\", onSelect: \"onSelect\", onUnselect: \"onUnselect\", onFocus: \"onFocus\", onBlur: \"onBlur\", onDropdownClick: \"onDropdownClick\", onClear: \"onClear\", onKeyUp: \"onKeyUp\", onShow: \"onShow\", onHide: \"onHide\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"(focus && !disabled) ||\\u00A0overlayVisible\" } }, providers: [AUTOCOMPLETE_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerEL\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"inputEL\", first: true, predicate: [\"in\"], descendants: true }, { propertyName: \"multiInputEL\", first: true, predicate: [\"multiIn\"], descendants: true }, { propertyName: \"multiContainerEL\", first: true, predicate: [\"multiContainer\"], descendants: true }, { propertyName: \"dropdownButton\", first: true, predicate: [\"ddBtn\"], descendants: true }, { propertyName: \"viewPort\", first: true, predicate: CdkVirtualScrollViewport, descendants: true }], ngImport: i0, template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n            ><ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"{'p-autocomplete-virtualscroll': virtualScroll}\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                            <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                            </li>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && !noResults\">\n                                <ng-container *cdkVirtualFor=\"let option of suggestionsToDisplay; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                    <li role=\"option\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                        <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                                    </li>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ng-template>\n                </ul>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `, isInline: true, styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}\"], components: [{ type: i2.CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\"], outputs: [\"scrolledIndexChange\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }, { type: i5.Ripple, selector: \"[pRipple]\" }, { type: i2.CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }, { type: i2.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }], animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: AutoComplete, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-autoComplete',\n                    template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n            ><ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"{'p-autocomplete-virtualscroll': virtualScroll}\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                            <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                            </li>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && !noResults\">\n                                <ng-container *cdkVirtualFor=\"let option of suggestionsToDisplay; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                    <li role=\"option\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                        <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                                    </li>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ng-template>\n                </ul>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `,\n                    animations: [\n                        trigger('overlayAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                                animate('{{showTransitionParams}}')\n                            ]),\n                            transition(':leave', [\n                                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    host: {\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': '(focus && !disabled) || overlayVisible'\n                    },\n                    providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./autocomplete.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.IterableDiffers }, { type: i1.PrimeNGConfig }]; }, propDecorators: { minLength: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], autoHighlight: [{\n                type: Input\n            }], forceSelection: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], unique: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], completeOnFocus: [{\n                type: Input\n            }], completeMethod: [{\n                type: Output\n            }], onSelect: [{\n                type: Output\n            }], onUnselect: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onDropdownClick: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], onKeyUp: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], field: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], dropdown: [{\n                type: Input\n            }], showEmptyMessage: [{\n                type: Input\n            }], dropdownMode: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], containerEL: [{\n                type: ViewChild,\n                args: ['container']\n            }], inputEL: [{\n                type: ViewChild,\n                args: ['in']\n            }], multiInputEL: [{\n                type: ViewChild,\n                args: ['multiIn']\n            }], multiContainerEL: [{\n                type: ViewChild,\n                args: ['multiContainer']\n            }], dropdownButton: [{\n                type: ViewChild,\n                args: ['ddBtn']\n            }], viewPort: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], suggestions: [{\n                type: Input\n            }] } });\nclass AutoCompleteModule {\n}\nAutoCompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: AutoCompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAutoCompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: AutoCompleteModule, declarations: [AutoComplete], imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule], exports: [AutoComplete, SharedModule, ScrollingModule] });\nAutoCompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: AutoCompleteModule, imports: [[CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule], SharedModule, ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.4\", ngImport: i0, type: AutoCompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule],\n                    exports: [AutoComplete, SharedModule, ScrollingModule],\n                    declarations: [AutoComplete]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };\n//# sourceMappingURL=primeng-autocomplete.js.map\n"]},"metadata":{},"sourceType":"module"}