{"version":3,"file":"ngx-bootstrap-progressbar.js","sources":["ngx-bootstrap/progressbar/progressbar.config.ts","ngx-bootstrap/progressbar/progressbar.component.ts","ngx-bootstrap/progressbar/bar.component.ts","ngx-bootstrap/progressbar/progressbar.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate: Boolean = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { BarComponent } from './bar.component';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  styles: [\n    `\n    :host {\n      width: 100%;\n      display: flex;\n    }\n  `\n  ]\n})\nexport class ProgressbarComponent {\n  /** if `true` changing value of progress bar will be animated */\n  @Input()\n  set animate(value: boolean) {\n    this._animate = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.animate = value;\n    });\n  }\n  /** If `true`, striped classes are applied */\n  @Input()\n  set striped(value: boolean) {\n    this._striped = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.striped = value;\n    });\n  }\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: string;\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set value(value: number | any[]) {\n    this.isStacked = Array.isArray(value);\n    this._value = value;\n  }\n  isStacked = false;\n  _striped: boolean;\n  _animate: boolean;\n  /* tslint:disable-next-line:no-any */\n  _value: number | any[];\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n\n  set max(v: number) {\n    this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n      bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') addClass = true;\n\n  /* tslint:disable-next-line:no-any */\n  bars: BarComponent[] = [];\n\n  protected _max = 100;\n\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n  addBar(bar: BarComponent): void {\n    bar.animate = this._animate;\n    bar.striped = this._striped;\n\n    this.bars.push(bar);\n  }\n\n  removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n  Component,\n  Host,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\n\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class]': '\"progress-bar \" + (type ? \"progress-bar-\" + type + \" bg-\" + type : \"\")',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"'\n  }\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  max: number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: string;\n\n  /** current value of progress bar */\n  @Input()\n  get value(): number {\n    return this._value;\n  }\n\n  set value(v: number) {\n    if (!v && v !== 0) {\n      return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  @HostBinding('style.width.%')\n  get setBarWidth() {\n    this.recalculatePercentage();\n\n    return this.percent;\n  }\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  striped: boolean;\n  animate: boolean;\n  percent = 0;\n  progress: ProgressbarComponent;\n\n  protected _value: number;\n\n  constructor(@Host() progress: ProgressbarComponent) {\n    this.progress = progress;\n  }\n\n  ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  recalculatePercentage(): void {\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n\n    const totalPercentage = this.progress.bars\n      .reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n      }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { ProgressbarConfig } from './progressbar.config';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\n  }\n}\n"]}