{"version":3,"file":"abp-ng2-module.umd.js","sources":["../../projects/abp-ng2-module/src/lib/abp.module.ts","../esm2015/projects/abp-ng2-module/src/lib/services/auth/token.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/auth/permission-checker.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/features/feature-checker.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/localization/localization.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/log/log.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/message/message.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/multi-tenancy/abp-multi-tenancy.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/notify/notify.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/session/abp-session.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/settings/setting.service.ts","../esm2015/projects/abp-ng2-module/src/lib/services/utils/utils.service.ts","../projects/abp-ng2-module/src/lib/services/abp-user-configuration.service.ts","../projects/abp-ng2-module/src/lib/interceptors/abp-http-configuration.service.ts","../projects/abp-ng2-module/src/lib/interceptors/refresh-token.service.ts","../projects/abp-ng2-module/src/lib/interceptors/abpHttpInterceptor.ts","../../../projects/abp-ng2-module/src/public-api.ts","../../../projects/abp-ng2-module/src/abp-ng2-module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class AbpModule { }\n","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n    getToken(): string {\r\n        return abp.auth.getToken();\r\n    }\r\n\r\n    getTokenCookieName(): string {\r\n        return abp.auth.tokenCookieName;\r\n    }\r\n\r\n    clearToken(): void {\r\n        abp.auth.clearToken();\r\n    }\r\n\r\n    setToken(authToken: string, expireDate?: Date): void {\r\n        abp.auth.setToken(authToken, expireDate);\r\n    }\r\n\r\n    //refresh token\r\n    getRefreshToken(): string {\r\n        return abp.auth.getRefreshToken();\r\n    }\r\n\r\n    getRefreshTokenCookieName(): string {\r\n        return abp.auth.refreshTokenCookieName;\r\n    }\r\n\r\n    clearRefreshToken(): void {\r\n        abp.auth.clearRefreshToken();\r\n    }\r\n\r\n    setRefreshToken(refreshToken: string, expireDate?: Date): void {\r\n        abp.auth.setRefreshToken(refreshToken, expireDate);\r\n    }\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PermissionCheckerService {\r\n\r\n    isGranted(permissionName: string): boolean {\r\n        return abp.auth.isGranted(permissionName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FeatureCheckerService {\r\n\r\n    get(featureName: string): abp.features.IFeature {\r\n        return abp.features.get(featureName);\r\n    }\r\n\r\n    getValue(featureName: string): string {\r\n        return abp.features.getValue(featureName);\r\n    }\r\n\r\n    isEnabled(featureName: string): boolean {\r\n        return abp.features.isEnabled(featureName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LocalizationService {\r\n\r\n    get languages(): abp.localization.ILanguageInfo[] {\r\n        return abp.localization.languages;\r\n    }\r\n\r\n    get currentLanguage(): abp.localization.ILanguageInfo {\r\n        return abp.localization.currentLanguage;\r\n    }\r\n\r\n    localize(key: string, sourceName: string): string {\r\n        return abp.localization.localize(key, sourceName);\r\n    }\r\n    \r\n    getSource(sourceName: string): (...key: string[]) => string {\r\n        return abp.localization.getSource(sourceName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n    debug(logObject?: any): void {\r\n        abp.log.debug(logObject);\r\n    }\r\n\r\n    info(logObject?: any): void {\r\n        abp.log.info(logObject);\r\n    }\r\n\r\n    warn(logObject?: any): void {\r\n        abp.log.warn(logObject);\r\n    }\r\n\r\n    error(logObject?: any): void {\r\n        abp.log.error(logObject);\r\n    }\r\n\r\n    fatal(logObject?: any): void {\r\n        abp.log.fatal(logObject);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n    info(message: string, title?: string, options?: any): any {\r\n        return abp.message.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): any {\r\n        return abp.message.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): any {\r\n        return abp.message.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): any {\r\n        return abp.message.error(message, title, options);\r\n    }\r\n\r\n    confirm(message: string, title?: string, callback?: (result: boolean) => void, options?: any): any {\r\n        return abp.message.confirm(message, title, callback, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpMultiTenancyService {\r\n\r\n    get isEnabled(): boolean {\r\n        return abp.multiTenancy.isEnabled;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotifyService {\r\n\r\n    info(message: string, title?: string, options?: any): void {\r\n        abp.notify.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): void {\r\n        abp.notify.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): void {\r\n        abp.notify.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): void {\r\n        abp.notify.error(message, title, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpSessionService {\r\n\r\n    get userId(): number | undefined {\r\n        return abp.session.userId;\r\n    }\r\n\r\n    get tenantId(): number | undefined {\r\n        return abp.session.tenantId;\r\n    }\r\n\r\n    get impersonatorUserId(): number | undefined {\r\n        return abp.session.impersonatorUserId;\r\n    }\r\n\r\n    get impersonatorTenantId(): number | undefined {\r\n        return abp.session.impersonatorTenantId;\r\n    }\r\n\r\n    get multiTenancySide(): abp.multiTenancy.sides {\r\n        return abp.session.multiTenancySide;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingService {\r\n\r\n    get(name: string): string {\r\n        return abp.setting.get(name);\r\n    }\r\n\r\n    getBoolean(name: string): boolean {\r\n        return abp.setting.getBoolean(name);\r\n    }\r\n    \r\n    getInt(name: string): number {\r\n        return abp.setting.getInt(name);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n  getCookieValue(key: string): string {\r\n    return abp.utils.getCookieValue(key);\r\n  }\r\n\r\n  setCookieValue(key: string, value: string, expireDate?: Date, path?: string, domain?: string, attributes?: any): void {\r\n    abp.utils.setCookieValue(key, value, expireDate, path, domain, attributes);\r\n  }\r\n\r\n  deleteCookie(key: string, path?: string): void {\r\n    abp.utils.deleteCookie(key, path);\r\n  }\r\n}\r\n","///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ndeclare var jQuery: any;\r\ndeclare var abp: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpUserConfigurationService {\r\n\r\n    constructor(private _http: HttpClient) {\r\n        \r\n    }\r\n\r\n    initialize(): void {\r\n        this._http.get('/AbpUserConfiguration/GetAll')\r\n            .subscribe(result => {\r\n                jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\r\n            });\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MessageService } from '../services/message/message.service';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { IErrorInfo, IAjaxResponse } from '../models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpHttpConfigurationService {\r\n\r\n    constructor(\r\n        private _messageService: MessageService,\r\n        private _logService: LogService) {\r\n    }\r\n\r\n    defaultError = <IErrorInfo>{\r\n        message: 'An error has occurred!',\r\n        details: 'Error details were not sent by server.'\r\n    };\r\n\r\n    defaultError401 = <IErrorInfo>{\r\n        message: 'You are not authenticated!',\r\n        details: 'You should be authenticated (sign in) in order to perform this operation.'\r\n    };\r\n\r\n    defaultError403 = <IErrorInfo>{\r\n        message: 'You are not authorized!',\r\n        details: 'You are not allowed to perform this operation.'\r\n    };\r\n\r\n    defaultError404 = <IErrorInfo>{\r\n        message: 'Resource not found!',\r\n        details: 'The resource requested could not be found on the server.'\r\n    };\r\n\r\n    logError(error: IErrorInfo): void {\r\n        this._logService.error(error);\r\n    }\r\n\r\n    showError(error: IErrorInfo): any {\r\n        if (error.details) {\r\n            return this._messageService.error(error.details, error.message || this.defaultError.message);\r\n        } else {\r\n            return this._messageService.error(error.message || this.defaultError.message);\r\n        }\r\n    }\r\n\r\n    handleTargetUrl(targetUrl: string): void {\r\n        if (!targetUrl) {\r\n            location.href = '/';\r\n        } else {\r\n            location.href = targetUrl;\r\n        }\r\n    }\r\n\r\n    handleUnAuthorizedRequest(messagePromise: any, targetUrl?: string) {\r\n        const self = this;\r\n\r\n        if (messagePromise) {\r\n            messagePromise.done(() => {\r\n                this.handleTargetUrl(targetUrl || '/');\r\n            });\r\n        } else {\r\n            self.handleTargetUrl(targetUrl || '/');\r\n        }\r\n    }\r\n\r\n    handleNonAbpErrorResponse(response: HttpResponse<any>) {\r\n        const self = this;\r\n\r\n        switch (response.status) {\r\n            case 401:\r\n                self.handleUnAuthorizedRequest(\r\n                    self.showError(self.defaultError401),\r\n                    '/'\r\n                );\r\n                break;\r\n            case 403:\r\n                self.showError(self.defaultError403);\r\n                break;\r\n            case 404:\r\n                self.showError(self.defaultError404);\r\n                break;\r\n            default:\r\n                self.showError(self.defaultError);\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleAbpResponse(response: HttpResponse<any>, ajaxResponse: IAjaxResponse): HttpResponse<any> {\r\n        var newResponse: HttpResponse<any>;\r\n\r\n        if (ajaxResponse.success) {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (ajaxResponse.targetUrl) {\r\n                this.handleTargetUrl(ajaxResponse.targetUrl);;\r\n            }\r\n        } else {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (!ajaxResponse.error) {\r\n                ajaxResponse.error = this.defaultError;\r\n            }\r\n\r\n            this.logError(ajaxResponse.error);\r\n            this.showError(ajaxResponse.error);\r\n\r\n            if (response.status === 401) {\r\n                this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\r\n            }\r\n        }\r\n\r\n        return newResponse;\r\n    }\r\n\r\n    getAbpAjaxResponseOrNull(response: HttpResponse<any>): IAjaxResponse | null {\r\n        if (!response || !response.headers) {\r\n            return null;\r\n        }\r\n\r\n        var contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n            this._logService.warn('Content-Type is not sent!');\r\n            return null;\r\n        }\r\n\r\n        if (contentType.indexOf(\"application/json\") < 0) {\r\n            this._logService.warn('Content-Type is not application/json: ' + contentType);\r\n            return null;\r\n        }\r\n\r\n        var responseObj = JSON.parse(JSON.stringify(response.body));\r\n        if (!responseObj.__abp) {\r\n            return null;\r\n        }\r\n\r\n        return responseObj as IAjaxResponse;\r\n    }\r\n\r\n    handleResponse(response: HttpResponse<any>): HttpResponse<any> {\r\n        var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\r\n        if (ajaxResponse == null) {\r\n            return response;\r\n        }\r\n\r\n        return this.handleAbpResponse(response, ajaxResponse);\r\n    }\r\n\r\n    blobToText(blob: any): Observable<string> {\r\n        return new Observable<string>((observer: any) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            } else {\r\n                let reader = new FileReader();\r\n                reader.onload = function () {\r\n                    observer.next(this.result);\r\n                    observer.complete();\r\n                }\r\n                reader.readAsText(blob);\r\n            }\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport abstract class RefreshTokenService {\r\n    /**\r\n     * Try to authenticate with refresh token and return if auth succeed\r\n     */\r\n    abstract tryAuthWithRefreshToken(): Observable<boolean>;\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { TokenService } from '../services/auth/token.service';\r\nimport { UtilsService } from '../services/utils/utils.service';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { switchMap, filter, take, catchError, tap, map } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { AbpHttpConfigurationService } from './abp-http-configuration.service'\r\nimport { RefreshTokenService } from './refresh-token.service'\r\ndeclare const abp: any;\r\n\r\n@Injectable()\r\nexport class AbpHttpInterceptor implements HttpInterceptor {\r\n\r\n    protected configuration: AbpHttpConfigurationService;\r\n    private _tokenService: TokenService = new TokenService();\r\n    private _utilsService: UtilsService = new UtilsService();\r\n    private _logService: LogService = new LogService();\r\n\r\n    constructor(configuration: AbpHttpConfigurationService,\r\n        private _injector: Injector) {\r\n        this.configuration = configuration;\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        var modifiedRequest = this.normalizeRequestHeaders(request);\r\n        return next.handle(modifiedRequest)\r\n            .pipe(\r\n                catchError(error => {\r\n                    if (error instanceof HttpErrorResponse && error.status === 401) {\r\n                        return this.tryAuthWithRefreshToken(request, next, error);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }),\r\n                switchMap((event) => {\r\n                    return this.handleSuccessResponse(event);\r\n                })\r\n            );\r\n    }\r\n\r\n    protected tryGetRefreshTokenService(): Observable<boolean> {\r\n        var _refreshTokenService = this._injector.get(RefreshTokenService, null);\r\n\r\n        if (_refreshTokenService) {\r\n            return _refreshTokenService.tryAuthWithRefreshToken();\r\n        }\r\n        return of(false);\r\n    }\r\n\r\n    private isRefreshing = false;\r\n    private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n    private tryAuthWithRefreshToken(request: HttpRequest<any>, next: HttpHandler, error: any) {\r\n        if (!this.isRefreshing) {\r\n            this.isRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n\r\n            return this.tryGetRefreshTokenService().pipe(\r\n                switchMap((authResult: boolean) => {\r\n                    this.isRefreshing = false;\r\n                    if (authResult) {\r\n                        this.refreshTokenSubject.next(authResult);\r\n                        let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                        return next.handle(modifiedRequest);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }));\r\n        } else {\r\n            return this.refreshTokenSubject.pipe(\r\n                filter(authResult => authResult != null),\r\n                take(1),\r\n                switchMap(authResult => {\r\n                    let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                    return next.handle(modifiedRequest);\r\n                }));\r\n        }\r\n    }\r\n\r\n    protected normalizeRequestHeaders(request: HttpRequest<any>): HttpRequest<any> {\r\n        var modifiedHeaders = new HttpHeaders();\r\n        modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\")\r\n            .set(\"Cache-Control\", \"no-cache\")\r\n            .set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\r\n\r\n        modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\r\n        modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\r\n\r\n        return request.clone({\r\n            headers: modifiedHeaders\r\n        });\r\n    }\r\n\r\n    protected addXRequestedWithHeader(headers: HttpHeaders): HttpHeaders {\r\n        if (headers) {\r\n            headers = headers.set('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAspNetCoreCultureHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\r\n            headers = headers.set('.AspNetCore.Culture', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAcceptLanguageHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('Accept-Language')) {\r\n            headers = headers.set('Accept-Language', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addTenantIdHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\r\n        if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\r\n            headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAuthorizationHeaders(headers: HttpHeaders): HttpHeaders {\r\n        let authorizationHeaders = headers ? headers.getAll('Authorization') : null;\r\n        if (!authorizationHeaders) {\r\n            authorizationHeaders = [];\r\n        }\r\n\r\n        if (!this.itemExists(authorizationHeaders, (item: string) => item.indexOf('Bearer ') == 0)) {\r\n            let token = this._tokenService.getToken();\r\n            if (headers && token) {\r\n                headers = headers.set('Authorization', 'Bearer ' + token);\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected handleSuccessResponse(event: HttpEvent<any>): Observable<HttpEvent<any>> {\r\n        var self = this;\r\n\r\n        if (event instanceof HttpResponse) {\r\n            if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\r\n                return self.configuration.blobToText(event.body).pipe(\r\n                    map(\r\n                        json => {\r\n                            const responseBody = json == \"null\" ? {} : JSON.parse(json);\r\n\r\n                            var modifiedResponse = self.configuration.handleResponse(event.clone({\r\n                                body: responseBody\r\n                            }));\r\n\r\n                            return modifiedResponse.clone({\r\n                                body: new Blob([JSON.stringify(modifiedResponse.body)], { type: 'application/json' })\r\n                            });\r\n                        })\r\n                );\r\n            }\r\n        }\r\n        return of(event);\r\n    }\r\n\r\n    protected handleErrorResponse(error: any): Observable<never> {\r\n        if (!(error.error instanceof Blob)) {\r\n            return throwError(error);\r\n        }\r\n\r\n        return this.configuration.blobToText(error.error).pipe(\r\n            switchMap((json) => {\r\n                const errorBody = (json == \"\" || json == \"null\") ? {} : JSON.parse(json);\r\n                const errorResponse = new HttpResponse({\r\n                    headers: error.headers,\r\n                    status: error.status,\r\n                    body: errorBody\r\n                });\r\n\r\n                var ajaxResponse = this.configuration.getAbpAjaxResponseOrNull(errorResponse);\r\n\r\n                if (ajaxResponse != null) {\r\n                    this.configuration.handleAbpResponse(errorResponse, ajaxResponse);\r\n                } else {\r\n                    this.configuration.handleNonAbpErrorResponse(errorResponse);\r\n                }\r\n\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private itemExists<T>(items: T[], predicate: (item: T) => boolean): boolean {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","/*\n * Public API Surface of abp-ng2-module\n */\n\nexport * from './lib/abp.module';\nexport * from './lib/services/';\nexport * from './lib/interceptors/';\nexport * from './lib/models/';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["NgModule","Injectable","HttpClient","Observable","BehaviorSubject","catchError","HttpErrorResponse","switchMap","of","filter","take","HttpHeaders","HttpResponse","map","throwError","Injector"],"mappings":";;;;;;;QAQA;;;;;gBANCA,WAAQ,SAAC;oBACR,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAE,EACR;oBACD,OAAO,EAAE,EAAE;iBACZ;;;ICPD;;QAOA;;QAEI,+BAAQ,GAAR;YACI,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC9B;QAED,yCAAkB,GAAlB;YACI,OAAO,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;SACnC;QAED,iCAAU,GAAV;YACI,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;SACzB;QAED,+BAAQ,GAAR,UAAS,SAAiB,EAAE,UAAiB;YACzC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;SAC5C;;QAGD,sCAAe,GAAf;YACI,OAAO,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;SACrC;QAED,gDAAyB,GAAzB;YACI,OAAO,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;SAC1C;QAED,wCAAiB,GAAjB;YACI,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAChC;QAED,sCAAe,GAAf,UAAgB,YAAoB,EAAE,UAAiB;YACnD,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;SACtD;;;;;gBApCJC,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,4CAAS,GAAT,UAAU,cAAsB;YAC5B,OAAO,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;SAC7C;;;;;gBAPJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,mCAAG,GAAH,UAAI,WAAmB;YACnB,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SACxC;QAED,wCAAQ,GAAR,UAAS,WAAmB;YACxB,OAAO,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAC7C;QAED,yCAAS,GAAT,UAAU,WAAmB;YACzB,OAAO,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SAC9C;;;;;gBAfJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,sBAAI,0CAAS;iBAAb;gBACI,OAAO,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC;aACrC;;;WAAA;QAED,sBAAI,gDAAe;iBAAnB;gBACI,OAAO,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC;aAC3C;;;WAAA;QAED,sCAAQ,GAAR,UAAS,GAAW,EAAE,UAAkB;YACpC,OAAO,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;SACrD;QAED,uCAAS,GAAT,UAAU,UAAkB;YACxB,OAAO,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SACjD;;;;;gBAnBJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,0BAAK,GAAL,UAAM,SAAe;YACjB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SAC5B;QAED,yBAAI,GAAJ,UAAK,SAAe;YAChB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3B;QAED,yBAAI,GAAJ,UAAK,SAAe;YAChB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3B;QAED,0BAAK,GAAL,UAAM,SAAe;YACjB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SAC5B;QAED,0BAAK,GAAL,UAAM,SAAe;YACjB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SAC5B;;;;;gBAvBJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,6BAAI,GAAJ,UAAK,OAAe,EAAE,KAAc,EAAE,OAAa;YAC/C,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACpD;QAED,gCAAO,GAAP,UAAQ,OAAe,EAAE,KAAc,EAAE,OAAa;YAClD,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACvD;QAED,6BAAI,GAAJ,UAAK,OAAe,EAAE,KAAc,EAAE,OAAa;YAC/C,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACpD;QAED,8BAAK,GAAL,UAAM,OAAe,EAAE,KAAc,EAAE,OAAa;YAChD,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACrD;QAED,gCAAO,GAAP,UAAQ,OAAe,EAAE,KAAc,EAAE,QAAoC,EAAE,OAAa;YACxF,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;SACjE;;;;;gBAvBJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,sBAAI,6CAAS;iBAAb;gBACI,OAAO,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC;aACrC;;;WAAA;;;;;gBAPJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,4BAAI,GAAJ,UAAK,OAAe,EAAE,KAAc,EAAE,OAAa;YAC/C,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC5C;QAED,+BAAO,GAAP,UAAQ,OAAe,EAAE,KAAc,EAAE,OAAa;YAClD,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC/C;QAED,4BAAI,GAAJ,UAAK,OAAe,EAAE,KAAc,EAAE,OAAa;YAC/C,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC5C;QAED,6BAAK,GAAL,UAAM,OAAe,EAAE,KAAc,EAAE,OAAa;YAChD,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAC7C;;;;;gBAnBJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,sBAAI,qCAAM;iBAAV;gBACI,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B;;;WAAA;QAED,sBAAI,uCAAQ;iBAAZ;gBACI,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;aAC/B;;;WAAA;QAED,sBAAI,iDAAkB;iBAAtB;gBACI,OAAO,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC;aACzC;;;WAAA;QAED,sBAAI,mDAAoB;iBAAxB;gBACI,OAAO,GAAG,CAAC,OAAO,CAAC,oBAAoB,CAAC;aAC3C;;;WAAA;QAED,sBAAI,+CAAgB;iBAApB;gBACI,OAAO,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC;aACvC;;;WAAA;;;;;gBAvBJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QAEI,4BAAG,GAAH,UAAI,IAAY;YACZ,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SAChC;QAED,mCAAU,GAAV,UAAW,IAAY;YACnB,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvC;QAED,+BAAM,GAAN,UAAO,IAAY;YACf,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACnC;;;;;gBAfJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;ICND;;QAOA;;QACE,qCAAc,GAAd,UAAe,GAAW;YACxB,OAAO,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SACtC;QAED,qCAAc,GAAd,UAAe,GAAW,EAAE,KAAa,EAAE,UAAiB,EAAE,IAAa,EAAE,MAAe,EAAE,UAAgB;YAC5G,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;SAC5E;QAED,mCAAY,GAAZ,UAAa,GAAW,EAAE,IAAa;YACrC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SACnC;;;;;gBAdFA,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ICND;;QAaI,qCAAoB,KAAiB;YAAjB,UAAK,GAAL,KAAK,CAAY;SAEpC;QAED,gDAAU,GAAV;YACI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,8BAA8B,CAAC;iBACzC,SAAS,CAAC,UAAA,MAAM;gBACb,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAChE,CAAC,CAAC;SACV;;;;;gBAdJA,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;gBAPQC,aAAU;;;;QCSf,qCACY,eAA+B,EAC/B,WAAuB;YADvB,oBAAe,GAAf,eAAe,CAAgB;YAC/B,gBAAW,GAAX,WAAW,CAAY;YAGnC,iBAAY,GAAe;gBACvB,OAAO,EAAE,wBAAwB;gBACjC,OAAO,EAAE,wCAAwC;aACpD,CAAC;YAEF,oBAAe,GAAe;gBAC1B,OAAO,EAAE,4BAA4B;gBACrC,OAAO,EAAE,2EAA2E;aACvF,CAAC;YAEF,oBAAe,GAAe;gBAC1B,OAAO,EAAE,yBAAyB;gBAClC,OAAO,EAAE,gDAAgD;aAC5D,CAAC;YAEF,oBAAe,GAAe;gBAC1B,OAAO,EAAE,qBAAqB;gBAC9B,OAAO,EAAE,0DAA0D;aACtE,CAAC;SApBD;QAsBD,8CAAQ,GAAR,UAAS,KAAiB;YACtB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACjC;QAED,+CAAS,GAAT,UAAU,KAAiB;YACvB,IAAI,KAAK,CAAC,OAAO,EAAE;gBACf,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aAChG;iBAAM;gBACH,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aACjF;SACJ;QAED,qDAAe,GAAf,UAAgB,SAAiB;YAC7B,IAAI,CAAC,SAAS,EAAE;gBACZ,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;aACvB;iBAAM;gBACH,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;aAC7B;SACJ;QAED,+DAAyB,GAAzB,UAA0B,cAAmB,EAAE,SAAkB;YAAjE,iBAUC;YATG,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,IAAI,cAAc,EAAE;gBAChB,cAAc,CAAC,IAAI,CAAC;oBAChB,KAAI,CAAC,eAAe,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;iBAC1C,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,eAAe,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC;aAC1C;SACJ;QAED,+DAAyB,GAAzB,UAA0B,QAA2B;YACjD,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,QAAQ,QAAQ,CAAC,MAAM;gBACnB,KAAK,GAAG;oBACJ,IAAI,CAAC,yBAAyB,CAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EACpC,GAAG,CACN,CAAC;oBACF,MAAM;gBACV,KAAK,GAAG;oBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACrC,MAAM;gBACV,KAAK,GAAG;oBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBACrC,MAAM;gBACV;oBACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAClC,MAAM;aACb;SACJ;QAED,uDAAiB,GAAjB,UAAkB,QAA2B,EAAE,YAA2B;YACtE,IAAI,WAA8B,CAAC;YAEnC,IAAI,YAAY,CAAC,OAAO,EAAE;gBAEtB,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;oBACzB,IAAI,EAAE,YAAY,CAAC,MAAM;iBAC5B,CAAC,CAAC;gBAEH,IAAI,YAAY,CAAC,SAAS,EAAE;oBACxB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBAAA,CAAC;iBACjD;aACJ;iBAAM;gBAEH,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;oBACzB,IAAI,EAAE,YAAY,CAAC,MAAM;iBAC5B,CAAC,CAAC;gBAEH,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;oBACrB,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;iBAC1C;gBAED,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEnC,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBACzB,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC;iBAChE;aACJ;YAED,OAAO,WAAW,CAAC;SACtB;QAED,8DAAwB,GAAxB,UAAyB,QAA2B;YAChD,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBAChC,OAAO,IAAI,CAAC;aACf;YAED,IAAI,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;gBACnD,OAAO,IAAI,CAAC;aACf;YAED,IAAI,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE;gBAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wCAAwC,GAAG,WAAW,CAAC,CAAC;gBAC9E,OAAO,IAAI,CAAC;aACf;YAED,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBACpB,OAAO,IAAI,CAAC;aACf;YAED,OAAO,WAA4B,CAAC;SACvC;QAED,oDAAc,GAAd,UAAe,QAA2B;YACtC,IAAI,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;YAC3D,IAAI,YAAY,IAAI,IAAI,EAAE;gBACtB,OAAO,QAAQ,CAAC;aACnB;YAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;SACzD;QAED,gDAAU,GAAV,UAAW,IAAS;YAChB,OAAO,IAAIC,eAAU,CAAS,UAAC,QAAa;gBACxC,IAAI,CAAC,IAAI,EAAE;oBACP,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAClB,QAAQ,CAAC,QAAQ,EAAE,CAAC;iBACvB;qBAAM;oBACH,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;oBAC9B,MAAM,CAAC,MAAM,GAAG;wBACZ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBAC3B,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB,CAAA;oBACD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;iBAC3B;aACJ,CAAC,CAAC;SACN;;;;;gBApKJF,aAAU,SAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;gBAPQ,cAAc;gBACd,UAAU;;;;QCCnB;;;;;gBADCA,aAAU;;;;QCiBP,4BAAY,aAA0C,EAC1C,SAAmB;YAAnB,cAAS,GAAT,SAAS,CAAU;YALvB,kBAAa,GAAiB,IAAI,YAAY,EAAE,CAAC;YACjD,kBAAa,GAAiB,IAAI,YAAY,EAAE,CAAC;YACjD,gBAAW,GAAe,IAAI,UAAU,EAAE,CAAC;YAiC3C,iBAAY,GAAG,KAAK,CAAC;YACrB,wBAAmB,GAAyB,IAAIG,oBAAe,CAAM,IAAI,CAAC,CAAC;YA9B/E,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QAED,sCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;YAAtD,iBAeC;YAdG,IAAI,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;YAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;iBAC9B,IAAI,CACDC,oBAAU,CAAC,UAAA,KAAK;gBACZ,IAAI,KAAK,YAAYC,oBAAiB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC5D,OAAO,KAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;iBAC7D;qBAAM;oBACH,OAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;iBAC1C;aACJ,CAAC,EACFC,mBAAS,CAAC,UAAC,KAAK;gBACZ,OAAO,KAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;aAC5C,CAAC,CACL,CAAC;SACT;QAES,sDAAyB,GAAzB;YACN,IAAI,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;YAEzE,IAAI,oBAAoB,EAAE;gBACtB,OAAO,oBAAoB,CAAC,uBAAuB,EAAE,CAAC;aACzD;YACD,OAAOC,OAAE,CAAC,KAAK,CAAC,CAAC;SACpB;QAKO,oDAAuB,GAAvB,UAAwB,OAAyB,EAAE,IAAiB,EAAE,KAAU;YAAhF,iBAyBP;YAxBG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEpC,OAAO,IAAI,CAAC,yBAAyB,EAAE,CAAC,IAAI,CACxCD,mBAAS,CAAC,UAAC,UAAmB;oBAC1B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,UAAU,EAAE;wBACZ,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC1C,IAAI,eAAe,GAAG,KAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;wBAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;qBACvC;yBAAM;wBACH,OAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;qBAC1C;iBACJ,CAAC,CAAC,CAAC;aACX;iBAAM;gBACH,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAChCE,gBAAM,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,IAAI,IAAI,GAAA,CAAC,EACxCC,cAAI,CAAC,CAAC,CAAC,EACPH,mBAAS,CAAC,UAAA,UAAU;oBAChB,IAAI,eAAe,GAAG,KAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;oBAC5D,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;iBACvC,CAAC,CAAC,CAAC;aACX;SACJ;QAES,oDAAuB,GAAvB,UAAwB,OAAyB;YACvD,IAAI,eAAe,GAAG,IAAII,cAAW,EAAE,CAAC;YACxC,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC;iBACtD,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC;iBAChC,GAAG,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;YAErD,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;YAChE,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;YAChE,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,CAAC;YACnE,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;YAChE,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;YAE1D,OAAO,OAAO,CAAC,KAAK,CAAC;gBACjB,OAAO,EAAE,eAAe;aAC3B,CAAC,CAAC;SACN;QAES,oDAAuB,GAAvB,UAAwB,OAAoB;YAClD,IAAI,OAAO,EAAE;gBACT,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;aAC/D;YAED,OAAO,OAAO,CAAC;SAClB;QAES,uDAA0B,GAA1B,UAA2B,OAAoB;YACrD,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;YACxF,IAAI,eAAe,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAE;gBACnE,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;aACjE;YAED,OAAO,OAAO,CAAC;SAClB;QAES,oDAAuB,GAAvB,UAAwB,OAAoB;YAClD,IAAI,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;YACxF,IAAI,eAAe,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;gBAC/D,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;aAC7D;YAED,OAAO,OAAO,CAAC;SAClB;QAES,8CAAiB,GAAjB,UAAkB,OAAoB;YAC5C,IAAI,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;YACjG,IAAI,mBAAmB,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE;gBACrF,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;aACnF;YAED,OAAO,OAAO,CAAC;SAClB;QAES,oDAAuB,GAAvB,UAAwB,OAAoB;YAClD,IAAI,oBAAoB,GAAG,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;YAC5E,IAAI,CAAC,oBAAoB,EAAE;gBACvB,oBAAoB,GAAG,EAAE,CAAC;aAC7B;YAED,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,UAAC,IAAY,IAAK,OAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAA,CAAC,EAAE;gBACxF,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC1C,IAAI,OAAO,IAAI,KAAK,EAAE;oBAClB,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC;iBAC7D;aACJ;YAED,OAAO,OAAO,CAAC;SAClB;QAES,kDAAqB,GAArB,UAAsB,KAAqB;YACjD,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,KAAK,YAAYC,eAAY,EAAE;gBAC/B,IAAI,KAAK,CAAC,IAAI,YAAY,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE;oBACnG,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CACjDC,aAAG,CACC,UAAA,IAAI;wBACA,IAAM,YAAY,GAAG,IAAI,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBAE5D,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;4BACjE,IAAI,EAAE,YAAY;yBACrB,CAAC,CAAC,CAAC;wBAEJ,OAAO,gBAAgB,CAAC,KAAK,CAAC;4BAC1B,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;yBACxF,CAAC,CAAC;qBACN,CAAC,CACT,CAAC;iBACL;aACJ;YACD,OAAOL,OAAE,CAAC,KAAK,CAAC,CAAC;SACpB;QAES,gDAAmB,GAAnB,UAAoB,KAAU;YAA9B,iBAyBT;YAxBG,IAAI,EAAE,KAAK,CAAC,KAAK,YAAY,IAAI,CAAC,EAAE;gBAChC,OAAOM,eAAU,CAAC,KAAK,CAAC,CAAC;aAC5B;YAED,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAClDP,mBAAS,CAAC,UAAC,IAAI;gBACX,IAAM,SAAS,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACzE,IAAM,aAAa,GAAG,IAAIK,eAAY,CAAC;oBACnC,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,IAAI,EAAE,SAAS;iBAClB,CAAC,CAAC;gBAEH,IAAI,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;gBAE9E,IAAI,YAAY,IAAI,IAAI,EAAE;oBACtB,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;iBACrE;qBAAM;oBACH,KAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC;iBAC/D;gBAED,OAAOE,eAAU,CAAC,KAAK,CAAC,CAAC;aAC5B,CAAC,CACL,CAAC;SACL;QAEO,uCAAU,GAAV,UAAc,KAAU,EAAE,SAA+B;YAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBACrB,OAAO,IAAI,CAAC;iBACf;aACJ;YAED,OAAO,KAAK,CAAC;SAChB;;;;gBApMJb,aAAU;;;gBAJF,2BAA2B;gBARfc,WAAQ;;;ICA7B;;;;ICAA;;;;;;;;;;;;;;;;;;;;;;;;;;;"}