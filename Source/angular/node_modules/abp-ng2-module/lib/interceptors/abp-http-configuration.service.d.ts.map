{"version":3,"file":"abp-http-configuration.service.d.ts","sources":["abp-http-configuration.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { MessageService } from '../services/message/message.service';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { IErrorInfo, IAjaxResponse } from '../models';\r\nexport declare class AbpHttpConfigurationService {\r\n    private _messageService;\r\n    private _logService;\r\n    constructor(_messageService: MessageService, _logService: LogService);\r\n    defaultError: IErrorInfo;\r\n    defaultError401: IErrorInfo;\r\n    defaultError403: IErrorInfo;\r\n    defaultError404: IErrorInfo;\r\n    logError(error: IErrorInfo): void;\r\n    showError(error: IErrorInfo): any;\r\n    handleTargetUrl(targetUrl: string): void;\r\n    handleUnAuthorizedRequest(messagePromise: any, targetUrl?: string): void;\r\n    handleNonAbpErrorResponse(response: HttpResponse<any>): void;\r\n    handleAbpResponse(response: HttpResponse<any>, ajaxResponse: IAjaxResponse): HttpResponse<any>;\r\n    getAbpAjaxResponseOrNull(response: HttpResponse<any>): IAjaxResponse | null;\r\n    handleResponse(response: HttpResponse<any>): HttpResponse<any>;\r\n    blobToText(blob: any): Observable<string>;\r\n}\r\n"]}