{"version":3,"file":"abpHttpInterceptor.d.ts","sources":["abpHttpInterceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { AbpHttpConfigurationService } from './abp-http-configuration.service';\r\nexport declare class AbpHttpInterceptor implements HttpInterceptor {\r\n    private _injector;\r\n    protected configuration: AbpHttpConfigurationService;\r\n    private _tokenService;\r\n    private _utilsService;\r\n    private _logService;\r\n    constructor(configuration: AbpHttpConfigurationService, _injector: Injector);\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\r\n    protected tryGetRefreshTokenService(): Observable<boolean>;\r\n    private isRefreshing;\r\n    private refreshTokenSubject;\r\n    private tryAuthWithRefreshToken;\r\n    protected normalizeRequestHeaders(request: HttpRequest<any>): HttpRequest<any>;\r\n    protected addXRequestedWithHeader(headers: HttpHeaders): HttpHeaders;\r\n    protected addAspNetCoreCultureHeader(headers: HttpHeaders): HttpHeaders;\r\n    protected addAcceptLanguageHeader(headers: HttpHeaders): HttpHeaders;\r\n    protected addTenantIdHeader(headers: HttpHeaders): HttpHeaders;\r\n    protected addAuthorizationHeaders(headers: HttpHeaders): HttpHeaders;\r\n    protected handleSuccessResponse(event: HttpEvent<any>): Observable<HttpEvent<any>>;\r\n    protected handleErrorResponse(error: any): Observable<never>;\r\n    private itemExists;\r\n}\r\n"]}