///<reference path="../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts"/>
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class TokenService {
    getToken() {
        return abp.auth.getToken();
    }
    getTokenCookieName() {
        return abp.auth.tokenCookieName;
    }
    clearToken() {
        abp.auth.clearToken();
    }
    setToken(authToken, expireDate) {
        abp.auth.setToken(authToken, expireDate);
    }
    //refresh token
    getRefreshToken() {
        return abp.auth.getRefreshToken();
    }
    getRefreshTokenCookieName() {
        return abp.auth.refreshTokenCookieName;
    }
    clearRefreshToken() {
        abp.auth.clearRefreshToken();
    }
    setRefreshToken(refreshToken, expireDate) {
        abp.auth.setRefreshToken(refreshToken, expireDate);
    }
}
TokenService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TokenService_Factory() { return new TokenService(); }, token: TokenService, providedIn: "root" });
TokenService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi9wcm9qZWN0cy9hYnAtbmcyLW1vZHVsZS9zcmMvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvYXV0aC90b2tlbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNHQUFzRztBQUV0RyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUszQyxNQUFNLE9BQU8sWUFBWTtJQUVyQixRQUFRO1FBQ0osT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCxrQkFBa0I7UUFDZCxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxVQUFVO1FBQ04sR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsUUFBUSxDQUFDLFNBQWlCLEVBQUUsVUFBaUI7UUFDekMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxlQUFlO0lBQ2YsZUFBZTtRQUNYLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQseUJBQXlCO1FBQ3JCLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQztJQUMzQyxDQUFDO0lBRUQsaUJBQWlCO1FBQ2IsR0FBRyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxlQUFlLENBQUMsWUFBb0IsRUFBRSxVQUFpQjtRQUNuRCxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDdkQsQ0FBQzs7OztZQXBDSixVQUFVLFNBQUM7Z0JBQ1IsVUFBVSxFQUFFLE1BQU07YUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIvLy88cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYWJwLXdlYi1yZXNvdXJjZXMvQWJwL0ZyYW1ld29yay9zY3JpcHRzL2FicC5kLnRzXCIvPlxyXG5cclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUb2tlblNlcnZpY2Uge1xyXG5cclxuICAgIGdldFRva2VuKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIGFicC5hdXRoLmdldFRva2VuKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VG9rZW5Db29raWVOYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIGFicC5hdXRoLnRva2VuQ29va2llTmFtZTtcclxuICAgIH1cclxuXHJcbiAgICBjbGVhclRva2VuKCk6IHZvaWQge1xyXG4gICAgICAgIGFicC5hdXRoLmNsZWFyVG9rZW4oKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRUb2tlbihhdXRoVG9rZW46IHN0cmluZywgZXhwaXJlRGF0ZT86IERhdGUpOiB2b2lkIHtcclxuICAgICAgICBhYnAuYXV0aC5zZXRUb2tlbihhdXRoVG9rZW4sIGV4cGlyZURhdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vcmVmcmVzaCB0b2tlblxyXG4gICAgZ2V0UmVmcmVzaFRva2VuKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIGFicC5hdXRoLmdldFJlZnJlc2hUb2tlbigpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFJlZnJlc2hUb2tlbkNvb2tpZU5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gYWJwLmF1dGgucmVmcmVzaFRva2VuQ29va2llTmFtZTtcclxuICAgIH1cclxuXHJcbiAgICBjbGVhclJlZnJlc2hUb2tlbigpOiB2b2lkIHtcclxuICAgICAgICBhYnAuYXV0aC5jbGVhclJlZnJlc2hUb2tlbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFJlZnJlc2hUb2tlbihyZWZyZXNoVG9rZW46IHN0cmluZywgZXhwaXJlRGF0ZT86IERhdGUpOiB2b2lkIHtcclxuICAgICAgICBhYnAuYXV0aC5zZXRSZWZyZXNoVG9rZW4ocmVmcmVzaFRva2VuLCBleHBpcmVEYXRlKTtcclxuICAgIH1cclxufSJdfQ==