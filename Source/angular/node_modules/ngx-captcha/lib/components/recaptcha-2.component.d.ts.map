{"version":3,"file":"recaptcha-2.component.d.ts","sources":["recaptcha-2.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ElementRef, Injector, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { ReCaptchaType } from '../models/recaptcha-type.enum';\r\nimport { ScriptService } from '../services/script.service';\r\nimport { BaseReCaptchaComponent } from './base-recaptcha.component';\r\nexport declare class ReCaptcha2Component extends BaseReCaptchaComponent implements OnChanges, OnDestroy {\r\n    protected renderer: Renderer2;\r\n    protected zone: NgZone;\r\n    protected injector: Injector;\r\n    protected scriptService: ScriptService;\r\n    /**\r\n    * Name of the global expire callback\r\n    */\r\n    protected readonly windowOnErrorCallbackProperty = \"ngx_captcha_error_callback\";\r\n    /**\r\n    * Name of the global error callback\r\n    */\r\n    protected readonly windowOnExpireCallbackProperty = \"ngx_captcha_expire_callback\";\r\n    /**\r\n     * Theme\r\n     */\r\n    theme: 'dark' | 'light';\r\n    /**\r\n    * Size\r\n    */\r\n    size: 'compact' | 'normal';\r\n    /**\r\n     * Language code. Auto-detects the user's language if unspecified.\r\n     */\r\n    hl: string;\r\n    captchaWrapperElem: ElementRef;\r\n    protected recaptchaType: ReCaptchaType;\r\n    constructor(renderer: Renderer2, zone: NgZone, injector: Injector, scriptService: ScriptService);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    protected captchaSpecificSetup(): void;\r\n    /**\r\n     * Gets reCaptcha properties\r\n    */\r\n    protected getCaptchaProperties(): any;\r\n    /**\r\n     * Registers global callbacks\r\n    */\r\n    private registerCallbacks;\r\n}\r\n"]}