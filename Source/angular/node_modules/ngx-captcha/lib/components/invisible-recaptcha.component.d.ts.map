{"version":3,"file":"invisible-recaptcha.component.d.ts","sources":["invisible-recaptcha.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ElementRef, Injector, NgZone, OnChanges, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { ReCaptchaType } from '../models/recaptcha-type.enum';\r\nimport { ScriptService } from '../services/script.service';\r\nimport { BaseReCaptchaComponent } from './base-recaptcha.component';\r\nexport declare class InvisibleReCaptchaComponent extends BaseReCaptchaComponent implements OnChanges {\r\n    protected renderer: Renderer2;\r\n    protected zone: NgZone;\r\n    protected injector: Injector;\r\n    protected scriptService: ScriptService;\r\n    /**\r\n     * This size representing invisible captcha\r\n     */\r\n    protected readonly size = \"invisible\";\r\n    /**\r\n     * Theme\r\n     */\r\n    theme: 'dark' | 'light';\r\n    /**\r\n     * Badge\r\n     */\r\n    badge: 'bottomright' | 'bottomleft' | 'inline';\r\n    /**\r\n     * Language code. Auto-detects the user's language if unspecified.\r\n     */\r\n    hl: string;\r\n    captchaWrapperElem: ElementRef;\r\n    protected recaptchaType: ReCaptchaType;\r\n    constructor(renderer: Renderer2, zone: NgZone, injector: Injector, scriptService: ScriptService);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    /**\r\n     * Programatically invoke the reCAPTCHA check. Used if the invisible reCAPTCHA is on a div instead of a button.\r\n     */\r\n    execute(): void;\r\n    protected captchaSpecificSetup(): void;\r\n    /**\r\n    * Gets reCaptcha properties\r\n    */\r\n    protected getCaptchaProperties(): any;\r\n}\r\n"]}